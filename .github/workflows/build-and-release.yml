name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'   # 只有推送 tag 时才运行，方便做 release
    branches:
      - main
      - dev
      - dev_huangzhenming
      - feat/**
  workflow_dispatch:  # 允许手动触发

jobs:
  python-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build

  gui-release:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install pyinstaller and project
        run: |
          pip install --upgrade pip
          pip install pyinstaller
          pip install -e .
      - name: Install UPX (Windows only)
        if: matrix.os == 'windows-latest'
        run: choco install upx -y
      - name: Debug working directory
        run: |
          pwd
          ls -al
          ls -al src/gui
      - name: Build GUI with pyinstaller
        run: |
          cd src/gui
          pwd
          ls -al
          pyinstaller --clean k230_flash_gui.spec
      - name: Compress exe with UPX
        if: matrix.os == 'windows-latest'
        run: |
          upx --best --lzma dist/k230_flash_gui.exe || true
      - name: Archive build artifact
        uses: actions/upload-artifact@v4
        with:
          name: gui-${{ matrix.os }}
          path: src/gui/dist/

      # - name: Upload Release Asset
      #   uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: src/gui/dist/**
